<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SSD49VUAAAAASUVORK5CYII=
</value>
  </data>
</root>